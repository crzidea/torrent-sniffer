#!/usr/bin/env node
const level = require('level')
const pouchdb = require('pouchdb')
const oldDB = level(`${process.env.HOME}/.torrent-sniffer/leveldb`);
const newDB = pouchdb(
  `${process.env.HOME}/.torrent-sniffer/database`,
  {revs_limit: 1}
);

//console.log(newDB);
let count = 0
const interval = 1000
const stream = oldDB.createReadStream()
.on('data', async function(data) {
  const value = JSON.parse(data.value);
  //console.log(data.key, value.name);
  //console.log(value);
  const document = {
    _id:      data.key,
    //_rev:     1,
    magnet:   value.magnet,
    name:     value.name,
    extnames: value.extnames
      .split(',')
      .map(extname => extname.replace(/^\./, ''))
  }
  count++

  stream.pause()
  try {
    await newDB.put(document, {force: true})
  } catch (e) {
    if (409 !== e.status) {
      throw e
    }
  }
  stream.resume()

  if (!(count % interval)) {
    console.log(`${count} torrents processed`);
  }
})
.on('error', (error) => {
  console.error(error.stack);
})
.on('close', () => {
  console.log('Stream closed')
})
.on('end', () => {
  console.log('--------')
  console.log(`${count} torrents found`);
  console.log('Stream ended')
})
